{"version":3,"sources":["webpack:///./ClientApp/$_lazy_route_resource lazy namespace object","webpack:///./ClientApp/app/Checkout/checkout.component.css","webpack:///./ClientApp/app/Checkout/checkout.component.html","webpack:///./ClientApp/app/Checkout/checkout.component.ts","webpack:///./ClientApp/app/app-routing.module.ts","webpack:///./ClientApp/app/app.component.html","webpack:///./ClientApp/app/app.component.ts","webpack:///./ClientApp/app/app.module.ts","webpack:///./ClientApp/app/login/login.component.html","webpack:///./ClientApp/app/login/login.component.ts","webpack:///./ClientApp/app/shared/Order.ts","webpack:///./ClientApp/app/shared/dataService.ts","webpack:///./ClientApp/app/shop/cart.component.html","webpack:///./ClientApp/app/shop/cart.component.ts","webpack:///./ClientApp/app/shop/productList.component.css","webpack:///./ClientApp/app/shop/productList.component.html","webpack:///./ClientApp/app/shop/productList.component.ts","webpack:///./ClientApp/app/shop/shop.component.html","webpack:///./ClientApp/app/shop/shop.component.ts","webpack:///./ClientApp/environments/environment.ts","webpack:///./ClientApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_lazy_route_resource lazy recursive\";","module.exports = \".checkout-thumb {\\n  max-width: 100px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvQ2hlY2tvdXQvY2hlY2tvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtDQUNsQiIsImZpbGUiOiJDbGllbnRBcHAvYXBwL0NoZWNrb3V0L2NoZWNrb3V0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2hlY2tvdXQtdGh1bWIge1xuICBtYXgtd2lkdGg6IDEwMHB4O1xufVxuIl19 */\"","module.exports = \"<div class=\\\"row\\\">\\n    <div *ngIf=\\\"errorMsg\\\" class=\\\"alert alert-danger\\\">{{errorMsg}}</div>\\n  <h3>Confirm Order</h3>\\n  <table class=\\\"table table-bordered table-hover\\\">\\n    <tr *ngFor=\\\"let o of data.order.items\\\">\\n      <td><img src=\\\"/img/nun.jpg\\\"  alt=\\\"o.productTitle\\\" class=\\\"img-thumbnail checkout-thumb\\\" /></td>\\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\\n      <td>{{ o.quantity }}</td>\\n      <td>{{ o.unitPrice|currency:'USD':'code' }}</td>\\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':'code' }}</td>\\n    </tr>\\n  </table>\\n  <div class=\\\"col-md-4 col-md-offset-8 text-right\\\">\\n    <table class=\\\"table table-condensed\\\">\\n      <tr>\\n        <td class=\\\"text-right\\\">Subtotal</td>\\n        <!--<td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':'code' }}</td>-->\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Shipping</td>\\n        <td class=\\\"text-right\\\">$ 0.00</td>\\n      </tr>\\n      <tr>\\n        <td class=\\\"text-right\\\">Total:</td>\\n        <!--<td class=\\\"text-right\\\">{{ data.order.subtotal|currency:'USD':'code' }}</td>-->\\n      </tr>\\n    </table>\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"onCheckout()\\\">Complete Purchase</button>\\n    <a routerLink=\\\"/\\\" class=\\\"btn btn-info\\\">Cancel</a>\\n  </div>\\n\\n</div>\\n\\n\\n\"","﻿import { Component } from \"@angular/core\";\nimport { DataService } from '../shared/dataService';\nimport { Router } from '@angular/router';\r\n\n@Component({\n  selector: \"checkout\",\n  templateUrl: \"checkout.component.html\",\n  styleUrls: ['checkout.component.css']\n})\nexport class Checkout {\n\n    constructor(public data: DataService, private route: Router) {\n    }\n    errorMsg: string = \"\";\n\n  onCheckout() {\n   \n      this.data.checkout()\n          .subscribe(success => {\n              if (success) {\n                  this.route.navigate([\"/\"]);\n              }\n              \n          }, err => this.errorMsg = \"Failed to save order\");\n  }\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { Shop } from \"./shop/shop.component\";\r\nimport { Checkout } from \"./Checkout/checkout.component\";\r\nimport { Login } from './login/login.component';\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n    { path: \"\", component: Shop },\r\n    { path: \"Checkout\", component: Checkout },\r\n    { path: \"login\", component: Login }\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {\r\n        useHash: true,\r\n        enableTracing: false\r\n\r\n    })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'the-shop',\n    templateUrl:\"./app.component.html\",\n    styles: []\n})\n\nexport class AppComponent {\n  title = 'Product List';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\nimport { productList } from \"./shop/productList.component\";\r\nimport { Cart } from \"./shop/cart.component\"\r\n\r\nimport { DataService } from \"./shared/dataService\";\r\nimport { Shop } from './shop/shop.component';\r\nimport { Checkout } from './Checkout/checkout.component';\r\nimport { Login } from './login/login.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      productList,\r\n      Cart,\r\n      Shop,\r\n      Checkout,\r\n      Login\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      AppRoutingModule,\r\n      HttpClientModule,\r\n      FormsModule\r\n    \r\n  ],\r\n    providers: [\r\n        {\r\n            provide: APP_BASE_HREF, useValue: '/'\r\n        },\r\n        DataService\r\n    ],\r\n\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4 col-md-offset-4\\\">\\r\\n    <form (submit)=\\\"onLogin()\\\" #theForm=\\\"ngForm\\\" novalidate>\\r\\n        <div *ngIf=\\\"errormsg\\\" class=\\\"alert alert-warning\\\" >{{ errormsg }}</div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Username</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"credens.username\\\" #username=\\\"ngModel\\\" required />\\r\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"username.touched && username.invalid \\\" >User Name is Required</div>\\r\\n        \\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"password\\\">Password</label>\\r\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"credens.password\\\" #password=\\\"ngModel\\\" required />\\r\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"password.invalid && password.touched  \\\">Password is Required</div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <input type=\\\"submit\\\" class=\\\"btn btn-success\\\" value=\\\"Login\\\" [disabled]=\\\"theForm.invalid\\\" />\\r\\n        <a routerLink=\\\"/\\\" class=\\\"btn btn-default\\\">Cancel</a>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: 'login.component.html',\r\n    styles:[]\r\n\r\n\r\n\r\n})\r\n\r\n\r\n\r\n\r\nexport class Login {\r\n    constructor(private data: DataService, private router: Router) {\r\n    }\r\n    errormsg: string = \"\";\r\n    public credens = {\r\n        username: \"\",\r\n        password:\"\"\r\n    };\r\n    onLogin() {\r\n        //alert(this.credens.username);\r\n        this.data.login(this.credens)\r\n         .subscribe(success => {\r\n                if (success) {\r\n                    if (this.data.order.items.length > 0) {\r\n                        this.router.navigate([\"Checkout\"]);\r\n                    }\r\n                    else {\r\n                        this.router.navigate([\"\"]);\r\n                    }\r\n                } \r\n            },err=>this.errormsg=\"Failed to Login\")\r\n\r\n    }\r\n}","﻿export class Order {\r\n\r\n    orderId: number;\r\n    orderDate: Date=new Date();\r\n    orderNumber: string;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n  \r\n\r\n}\r\n\r\nexport class OrderItem {\r\n  \r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n\r\n}\r\n\r\n","﻿import { Injectable } from \"@angular/core\";\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Product } from './Products';\r\nimport { throwError } from 'rxjs';\r\nimport { Order, OrderItem } from './Order';\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    public token:string=\"\";\r\n    private tokenExpiration: Date;\r\n    public order: Order = new Order();\r\n    public products: Product[] = [];\r\n\r\n    public loadProducts(): Observable<Product[]> {\r\n        let fff = this.http.get('/api/products')\r\n            .pipe(map((data => this.products = data as Product[]),\r\n                catchError(err => throwError(err))));\r\n\r\n        return fff;\r\n    }\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration > new Date();\r\n    }\r\n    public login(credens) {\r\n        return this.http.post(\"/account/createtoken\", credens)\r\n            .pipe(map((data: any) => {\r\n                let tokenInfo = data;\r\n                this.token = tokenInfo.token;\r\n                this.tokenExpiration = tokenInfo.expiration;\r\n                return true;\r\n\r\n            })\r\n            );\r\n\r\n\r\n        //.subscribe((data:any) => {\r\n        //        let tokenInfo = data;\r\n        //        this.token = tokenInfo.token;\r\n        //        this.tokenExpiration = tokenInfo.expiration;\r\n        //        return true;\r\n        //    })\r\n            \r\n\r\n    }\r\n\r\n    public checkout() {\r\n        if (!this.order.orderNumber) {\r\n            this.order.orderNumber = this.order.orderDate.getFullYear().toString + this.order.orderDate.getTime().toString();\r\n        }\r\n        return this.http.post(\"/api/orders\", this.order, {\r\n            headers: new HttpHeaders({ \"Authorization\": \"Bearer \" + this.token })\r\n        })\r\n            .pipe(map((data: any) => {\r\n                this.order = new Order();\r\n                return true;\r\n            })\r\n            );\r\n\r\n    }\r\n\r\n\r\n    public AddToOrder(product: Product) {\r\n\r\n        //if (!this.order) {\r\n        //    this.order = new Order();\r\n        //}\r\n        let item: OrderItem = this.order.items.find(i => i.productId == product.id);\r\n\r\n        if (item) {\r\n           \r\n        }\r\n        else {\r\n        }\r\n\r\n        item = new OrderItem();\r\n\r\n        item.productId = product.id;\r\n        item.productArtist = product.artist;\r\n        item.productTitle = product.title;\r\n        item.unitPrice = product.price;\r\n        item.productSize = product.size;\r\n        item.productCategory = product.category;\r\n        \r\n\r\n\r\n        this.order.items.push(item);\r\n\r\n    }\r\n\r\n\r\n \r\n\r\n\r\n}","module.exports = \"<h3>Shopping Cart</h3>\\r\\n<div>Count:{{data.order.items.length}}</div> \\r\\n<div>\\r\\n\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n            <tr>\\r\\n                <td>Product</td>\\r\\n                <td>Artist</td>\\r\\n                <td>UnitPrice</td>\\r\\n                <td>Product Size</td>\\r\\n                \\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody >\\r\\n            <tr *ngFor=\\\"let o of data.order.items\\\">\\r\\n                <td>{{o.productCategory}}</td>\\r\\n                <td>{{ o.productArtist }}</td>\\r\\n                <td>{{(o.unitPrice)|currency:\\\"BDT\\\":'code'}}</td>\\r\\n                <td>{{(o.productSize)}}</td>\\r\\n            </tr>\\r\\n            \\r\\n        </tbody>\\r\\n    </table>\\r\\n\\r\\n    <button class=\\\"btn btn-success\\\" *ngIf=\\\"data.order.items.length>0\\\" (click)=\\\"onCheckout()\\\">Checkout</button>\\r\\n\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styles:[]\r\n\r\n\r\n})\r\n\r\nexport class Cart {\r\n    constructor(public data: DataService, private route: Router) {\r\n    }\r\n\r\n    onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            this.route.navigate([\"login\"]);\r\n        }\r\n        else {\r\n            this.route.navigate([\"checkout\"]);\r\n\r\n        }\r\n    \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","module.exports = \".product-info img {\\r\\n    max-width:100px;\\r\\n    float:left;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkNsaWVudEFwcC9hcHAvc2hvcC9wcm9kdWN0TGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFdBQVc7OztDQUdkIiwiZmlsZSI6IkNsaWVudEFwcC9hcHAvc2hvcC9wcm9kdWN0TGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnByb2R1Y3QtaW5mbyBpbWcge1xyXG4gICAgbWF4LXdpZHRoOjEwMHB4O1xyXG4gICAgZmxvYXQ6bGVmdDtcclxuXHJcblxyXG59XHJcbiJdfQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"product-info col-md-4  border-white\\\" *ngFor=\\\"let p of products\\\">\\r\\n        <img src=\\\"/img/nun.jpg\\\" class=\\\"img-thumbnail\\\" />\\r\\n        <h3>{{p.category}}-{{p.size}}</h3>\\r\\n        \\r\\n            <div>Ticket {{p.price}}</div>\\r\\n            <div>Artist:-{{p.artist}}</div>\\r\\n            <div>Title: {{p.title}} </div>\\r\\n            <div>Description:{{p.artDescription}}</div>\\r\\n        <button id=\\\"buyBtn\\\" class=\\\"btn btn-success btn-sm pull-right\\\" (click)=\\\"addProduct(p)\\\" >Buy</button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!--<ul>\\r\\n        <li *ngFor=\\\"let p of products\\\"></li>\\r\\n    </ul>-->\\r\\n\\r\\n\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Observable } from \"rxjs\";\r\nimport { Product } from '../shared/Products';\r\n\r\n\r\n\r\n@Component({\r\n\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls:[\"productList.component.css\"]\r\n    \r\n})\r\n\r\n\r\nexport class productList implements OnInit {\r\n\r\n    public products: Product[];\r\n    \r\n   \r\n    constructor(private data: DataService) {\r\n        this.products = data.products;\r\n    }\r\n    \r\n    \r\n\r\n    ngOnInit() {            \r\n        let ddd = this.data.loadProducts()\r\n            .subscribe((data: Product[]) => this.products = data);\r\n\r\n\r\n        \r\n        \r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.AddToOrder(product);\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <h3>Shop</h3>\\r\\n        <product-list></product-list>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n        <div class=\\\"well well-sm\\\">\\r\\n            <the-cart></the-cart>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\"","﻿import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: 'the-shop',\r\n    templateUrl: 'shop.component.html'\r\n})\r\n\r\n\r\nexport class Shop {\r\n\r\n    \r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}